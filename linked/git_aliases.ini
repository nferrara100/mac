# Some aliases credit: https://github.com/alrra/dotfiles/blob/main/src/git/gitconfig

[alias]
    a = add

    b = "!f() { source $DOTFILES/better-git-branch.sh; }; f"

    bd = branch -D

    # Delete branch $1 locally and remotely
    bdr = !git push origin -d "$1" && git branch -D "$1"

    c = !bash -c 'source $DOTFILES/git_functions.sh && commit "$0" "$@"'

    ca = !bash -c 'source $DOTFILES/git_functions.sh && commit-all "$0" "$@"'

    cb = checkout -b

    cl = checkout -

    co = checkout

    credit = !bash -c 'source $DOTFILES/git_functions.sh && credit "$0" "$@"'

    cu = commit -v --amend

    cua = add . && commit -v --amend

    d = diff -- . ':!*package-lock.json' ':!*yarn.lock'

    delete-branches = !bash -c 'source $DOTFILES/git_functions.sh && delete-branches "$0" "$@"'

    ir = !bash -c 'source $DOTFILES/git_functions.sh && interactive-rebase "$0" "$@"'

    # Display last commit
	last = log -1 HEAD --stat

    # List contributors
    lc = shortlog --email --numbered --summary

    # Ignore .gitignore pattern only in this clone of the repo
    li = !bash -c 'source $DOTFILES/git_functions.sh && local-ignore "$0" "$@"'

    # Edit the local git clone ignore file
    lie = !bash -c 'source $DOTFILES/git_functions.sh && local-ignore-edit "$0" "$@"'

    # Number of lines in the repo
    lines = !bash -c 'git ls-files | xargs wc -l | sort -n | head -n 101'

    # Log with a prettier, more condensed format
	ll = log --graph --pretty=colorful --abbrev-commit

    p = push

    pf = push --force-with-lease

    r = rebase

    ra = rebase --abort

    rc = rebase --continue

    rename-branch = !bash -c 'source $DOTFILES/git_functions.sh && rename-branch "$0" "$@"'

    retag = !bash -c 'source $DOTFILES/git_functions.sh && retag "$0" "$@"'

    ro = !bash -c 'source $DOTFILES/git_functions.sh && reset-to-origin "$0" "$@"'

    s = status

    sc = !bash -c 'source $DOTFILES/git_functions.sh && search-for-commits "$0" "$@"'

    sm = !bash -c 'source $DOTFILES/git_functions.sh && search-for-message "$0" "$@"'

    ss = !bash -c 'source $DOTFILES/git_functions.sh && search-for-snippet "$0" "$@"'

    st = stash

    start= !bash -c 'source $DOTFILES/git_functions.sh && start "$0" "$@"'

    stp = stash pop

    # Update last commit (amend without editing message)
    u = commit -v --amend --no-edit

    # Update last commit with all local changes (add all and amend without editing)
	ua = !git add . && git commit -v --amend --no-edit

    # Don't pass $0.
    undo = !bash -c 'source $DOTFILES/git_functions.sh && undo-last-commits "$@"'

    # Undo adding all files for next commit
	unstage = reset HEAD --

    wipe-commits = !bash -c 'source $DOTFILES/git_functions.sh && wipe-last-commits "$0" "$@"'

    wipe-local = !bash -c 'source $DOTFILES/git_functions.sh && wipe-local "$0" "$@"'

[pretty]
    colorful = "%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"
    #               │                    │         │           │                  └─ author name
    #               │                    │         │           └─ date (relative)
    #               │                    │         └─ message
    #               │                    └─ decorations (branch, heads or tags)
    #               └─ hash (abbreviated)
